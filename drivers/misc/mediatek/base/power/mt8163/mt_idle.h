#ifndef _MT_IDLE_H
#define _MT_IDLE_H

#define MT_IDLE_EN		1

enum idle_lock_spm_id {
	IDLE_SPM_LOCK_VCORE_DVFS = 0,
};

#if MT_IDLE_EN

extern void idle_lock_spm(enum idle_lock_spm_id id);
extern void idle_unlock_spm(enum idle_lock_spm_id id);

extern void enable_dpidle_by_bit(int id);
extern void disable_dpidle_by_bit(int id);
extern void enable_soidle_by_bit(int id);
extern void disable_soidle_by_bit(int id);

extern void set_slp_spm_deepidle_flags(bool en);

extern void mt_idle_init(void);

#else /* !MT_IDLE_EN */

static inline void idle_lock_spm(enum idle_lock_spm_id id) {}
static inline void idle_unlock_spm(enum idle_lock_spm_id id) {}

static inline void enable_dpidle_by_bit(int id) {}
static inline void disable_dpidle_by_bit(int id) {}
static inline void enable_soidle_by_bit(int id) {}
static inline void disable_soidle_by_bit(int id) {}

static inline void set_slp_spm_deepidle_flags(bool en) {}

static inline void mt_idle_init(void) {}

#endif /* MT_IDLE_EN */

#define CLKMGR_ALIAS		1

enum {
	CG_INFRA0	= 0,
	CG_INFRA1	= 1,
	CG_DISP0	= 2,
	CG_DISP1	= 3,
	CG_IMAGE	= 4,
	CG_MFG		= 5,
	CG_AUDIO	= 6,
	CG_VDEC0	= 7,
	CG_VDEC1	= 8,
	CG_VENC		= 9,
	NR_GRPS		= 10,
};

#define CGID(grp, bit)	((grp) * 32 + bit)

enum cg_clk_id {
	MT_CG_INFRA_PMIC_TMR		= CGID(CG_INFRA0, 0),
	MT_CG_INFRA_PMIC_AP		= CGID(CG_INFRA0, 1),
	MT_CG_INFRA_PMIC_MD		= CGID(CG_INFRA0, 2),
	MT_CG_INFRA_PMIC_CONN		= CGID(CG_INFRA0, 3),
	MT_CG_INFRA_SCPSYS		= CGID(CG_INFRA0, 4),
	MT_CG_INFRA_SEJ			= CGID(CG_INFRA0, 5),
	MT_CG_INFRA_APXGPT		= CGID(CG_INFRA0, 6),
	MT_CG_INFRA_USB			= CGID(CG_INFRA0, 7),
	MT_CG_INFRA_ICUSB		= CGID(CG_INFRA0, 8),
	MT_CG_INFRA_GCE			= CGID(CG_INFRA0, 9),
	MT_CG_INFRA_THERM		= CGID(CG_INFRA0, 10),
	MT_CG_INFRA_I2C0		= CGID(CG_INFRA0, 11),
	MT_CG_INFRA_I2C1		= CGID(CG_INFRA0, 12),
	MT_CG_INFRA_I2C2		= CGID(CG_INFRA0, 13),
	MT_CG_INFRA_PWM_HCLK		= CGID(CG_INFRA0, 15),
	MT_CG_INFRA_PWM1		= CGID(CG_INFRA0, 16),
	MT_CG_INFRA_PWM2		= CGID(CG_INFRA0, 17),
	MT_CG_INFRA_PWM3		= CGID(CG_INFRA0, 18),
	MT_CG_INFRA_PWM			= CGID(CG_INFRA0, 21),
	MT_CG_INFRA_UART0		= CGID(CG_INFRA0, 22),
	MT_CG_INFRA_UART1		= CGID(CG_INFRA0, 23),
	MT_CG_INFRA_UART2		= CGID(CG_INFRA0, 24),
	MT_CG_INFRA_UART3		= CGID(CG_INFRA0, 25),
	MT_CG_INFRA_USB_MCU		= CGID(CG_INFRA0, 26),
	MT_CG_INFRA_NFI_ECC_66M		= CGID(CG_INFRA0, 27),
	MT_CG_INFRA_NFI_66M		= CGID(CG_INFRA0, 28),
	MT_CG_INFRA_BTIF		= CGID(CG_INFRA0, 31),

	MT_CG_INFRA_SPI			= CGID(CG_INFRA1, 1),
	MT_CG_INFRA_MSDC_0		= CGID(CG_INFRA1, 2),
	MT_CG_INFRA_MSDC_1		= CGID(CG_INFRA1, 4),
	MT_CG_INFRA_MSDC_2		= CGID(CG_INFRA1, 5),
	MT_CG_INFRA_MSDC_3		= CGID(CG_INFRA1, 6),
	MT_CG_INFRA_GCPU		= CGID(CG_INFRA1, 8),
	MT_CG_INFRA_AUXADC		= CGID(CG_INFRA1, 10),
	MT_CG_INFRA_CPUM		= CGID(CG_INFRA1, 11),
	MT_CG_INFRA_IRRX		= CGID(CG_INFRA1, 12),
	MT_CG_INFRA_UFO			= CGID(CG_INFRA1, 13),
	MT_CG_INFRA_CEC			= CGID(CG_INFRA1, 14),
	MT_CG_INFRA_CEC_26M		= CGID(CG_INFRA1, 15),
	MT_CG_INFRA_NFI_BCLK		= CGID(CG_INFRA1, 16),
	MT_CG_INFRA_NFI_ECC		= CGID(CG_INFRA1, 17),
	MT_CG_INFRA_APDMA		= CGID(CG_INFRA1, 18),
	MT_CG_INFRA_DEVICE_APC		= CGID(CG_INFRA1, 20),
	MT_CG_INFRA_XIU2AHB		= CGID(CG_INFRA1, 21),
	MT_CG_INFRA_L2C_SRAM		= CGID(CG_INFRA1, 22),
	MT_CG_INFRA_ETH_50M		= CGID(CG_INFRA1, 23),
	MT_CG_INFRA_DEBUGSYS		= CGID(CG_INFRA1, 24),
	MT_CG_INFRA_AUDIO		= CGID(CG_INFRA1, 25),
	MT_CG_INFRA_ETH_25M		= CGID(CG_INFRA1, 26),
	MT_CG_INFRA_NFI			= CGID(CG_INFRA1, 27),
	MT_CG_INFRA_ONFI		= CGID(CG_INFRA1, 28),
	MT_CG_INFRA_SNFI		= CGID(CG_INFRA1, 29),
	MT_CG_INFRA_ETH_HCLK		= CGID(CG_INFRA1, 30),
	MT_CG_INFRA_DRAMC_F26M		= CGID(CG_INFRA1, 31),

	MT_CG_DISP0_SMI_COMMON		= CGID(CG_DISP0, 0),
	MT_CG_DISP0_SMI_LARB0		= CGID(CG_DISP0, 1),
	MT_CG_DISP0_CAM_MDP		= CGID(CG_DISP0, 2),
	MT_CG_DISP0_MDP_RDMA		= CGID(CG_DISP0, 3),
	MT_CG_DISP0_MDP_RSZ0		= CGID(CG_DISP0, 4),
	MT_CG_DISP0_MDP_RSZ1		= CGID(CG_DISP0, 5),
	MT_CG_DISP0_MDP_TDSHP		= CGID(CG_DISP0, 6),
	MT_CG_DISP0_MDP_WDMA		= CGID(CG_DISP0, 7),
	MT_CG_DISP0_MDP_WROT		= CGID(CG_DISP0, 8),
	MT_CG_DISP0_FAKE_ENG		= CGID(CG_DISP0, 9),
	MT_CG_DISP0_DISP_OVL0		= CGID(CG_DISP0, 10),
	MT_CG_DISP0_DISP_OVL1		= CGID(CG_DISP0, 11),
	MT_CG_DISP0_DISP_RDMA0		= CGID(CG_DISP0, 12),
	MT_CG_DISP0_DISP_RDMA1		= CGID(CG_DISP0, 13),
	MT_CG_DISP0_DISP_WDMA0		= CGID(CG_DISP0, 14),
	MT_CG_DISP0_DISP_COLOR		= CGID(CG_DISP0, 15),
	MT_CG_DISP0_DISP_CCORR		= CGID(CG_DISP0, 16),
	MT_CG_DISP0_DISP_AAL		= CGID(CG_DISP0, 17),
	MT_CG_DISP0_DISP_GAMMA		= CGID(CG_DISP0, 18),
	MT_CG_DISP0_DISP_DITHER		= CGID(CG_DISP0, 19),
	MT_CG_DISP0_DISP_UFOE		= CGID(CG_DISP0, 20),
	MT_CG_DISP0_LARB4_AXI_ASIF_MM	= CGID(CG_DISP0, 21),
	MT_CG_DISP0_LARB4_AXI_ASIF_MJC	= CGID(CG_DISP0, 22),
	MT_CG_DISP0_DISP_WDMA1		= CGID(CG_DISP0, 23),
	MT_CG_DISP0_UFOD_RDMA0_L0	= CGID(CG_DISP0, 24),
	MT_CG_DISP0_UFOD_RDMA0_L1	= CGID(CG_DISP0, 25),
	MT_CG_DISP0_UFOD_RDMA0_L2	= CGID(CG_DISP0, 26),
	MT_CG_DISP0_UFOD_RDMA0_L3	= CGID(CG_DISP0, 27),
	MT_CG_DISP0_UFOD_RDMA1_L0	= CGID(CG_DISP0, 28),
	MT_CG_DISP0_UFOD_RDMA1_L1	= CGID(CG_DISP0, 29),
	MT_CG_DISP0_UFOD_RDMA1_L2	= CGID(CG_DISP0, 30),
	MT_CG_DISP0_UFOD_RDMA1_L3	= CGID(CG_DISP0, 31),

	MT_CG_DISP1_DISP_PWM_MM		= CGID(CG_DISP1, 0),
	MT_CG_DISP1_DISP_PWM_26M	= CGID(CG_DISP1, 1),
	MT_CG_DISP1_DSI_ENGINE		= CGID(CG_DISP1, 2),
	MT_CG_DISP1_DSI_DIGITAL		= CGID(CG_DISP1, 3),
	MT_CG_DISP1_DPI_PIXEL		= CGID(CG_DISP1, 4),
	MT_CG_DISP1_DPI_ENGINE		= CGID(CG_DISP1, 5),
	MT_CG_DISP1_LVDS_PIXEL		= CGID(CG_DISP1, 6),
	MT_CG_DISP1_LVDS_CTS		= CGID(CG_DISP1, 7),
	MT_CG_DISP1_DPI1_PIXEL		= CGID(CG_DISP1, 8),
	MT_CG_DISP1_DPI1_ENGINE		= CGID(CG_DISP1, 9),
	MT_CG_DISP1_HDMI_PIXEL		= CGID(CG_DISP1, 10),
	MT_CG_DISP1_HDMI_SPDIF		= CGID(CG_DISP1, 11),
	MT_CG_DISP1_HDMI_ADSP		= CGID(CG_DISP1, 12),
	MT_CG_DISP1_HDMI_PLLCK		= CGID(CG_DISP1, 13),
	MT_CG_DISP1_DISP_DSC_ENGINE	= CGID(CG_DISP1, 14),
	MT_CG_DISP1_DISP_DSC_MEM	= CGID(CG_DISP1, 15),

	MT_CG_IMAGE_LARB2_SMI		= CGID(CG_IMAGE, 0),
	MT_CG_IMAGE_JPGENC		= CGID(CG_IMAGE, 4),
	MT_CG_IMAGE_CAM_SMI		= CGID(CG_IMAGE, 5),
	MT_CG_IMAGE_CAM_CAM		= CGID(CG_IMAGE, 6),
	MT_CG_IMAGE_SEN_TG		= CGID(CG_IMAGE, 7),
	MT_CG_IMAGE_SEN_CAM		= CGID(CG_IMAGE, 8),
	MT_CG_IMAGE_CAM_SV		= CGID(CG_IMAGE, 9),

#if CLKMGR_ALIAS
	MT_CG_MFG_BG3D			= CGID(CG_MFG, 0),
#endif

	MT_CG_G3D_FF			= CGID(CG_MFG, 0),
	MT_CG_G3D_DW			= CGID(CG_MFG, 1),
	MT_CG_G3D_TX			= CGID(CG_MFG, 2),
	MT_CG_G3D_MX			= CGID(CG_MFG, 3),

	MT_CG_AUDIO_AFE			= CGID(CG_AUDIO, 2),
	MT_CG_AUDIO_I2S			= CGID(CG_AUDIO, 6),
	MT_CG_AUDIO_22M			= CGID(CG_AUDIO, 8),
	MT_CG_AUDIO_24M			= CGID(CG_AUDIO, 9),
	MT_CG_AUDIO_SPDF2		= CGID(CG_AUDIO, 11),
	MT_CG_AUDIO_APLL2_TUNER		= CGID(CG_AUDIO, 18),
	MT_CG_AUDIO_APLL_TUNER		= CGID(CG_AUDIO, 19),
	MT_CG_AUDIO_HDMI		= CGID(CG_AUDIO, 20),
	MT_CG_AUDIO_SPDF		= CGID(CG_AUDIO, 21),
	MT_CG_AUDIO_ADC			= CGID(CG_AUDIO, 24),
	MT_CG_AUDIO_DAC			= CGID(CG_AUDIO, 25),
	MT_CG_AUDIO_DAC_PREDIS		= CGID(CG_AUDIO, 26),
	MT_CG_AUDIO_TML			= CGID(CG_AUDIO, 27),
	MT_CG_AUDIO_IDLE_EN_EXT		= CGID(CG_AUDIO, 29),
	MT_CG_AUDIO_IDLE_EN_INT		= CGID(CG_AUDIO, 30),

	MT_CG_VDEC0_VDEC		= CGID(CG_VDEC0, 0),

	MT_CG_VDEC1_LARB		= CGID(CG_VDEC1, 0),

#if CLKMGR_ALIAS
	MT_CG_VENC_LARB			= CGID(CG_VENC, 0),
	MT_CG_VENC_VENC			= CGID(CG_VENC, 4),
	MT_CG_VENC_JPGENC		= CGID(CG_VENC, 8),
	MT_CG_VENC_JPGDEC		= CGID(CG_VENC, 12),
#endif

	MT_CG_VENC_CKE0			= CGID(CG_VENC, 0),
	MT_CG_VENC_CKE1			= CGID(CG_VENC, 4),
	MT_CG_VENC_CKE2			= CGID(CG_VENC, 8),
	MT_CG_VENC_CKE3			= CGID(CG_VENC, 12),

	NR_CLKS,

	CG_INFRA0_FROM			= MT_CG_INFRA_PMIC_TMR,
	CG_INFRA0_TO			= MT_CG_INFRA_BTIF,

	CG_INFRA1_FROM			= MT_CG_INFRA_SPI,
	CG_INFRA1_TO			= MT_CG_INFRA_DRAMC_F26M,

	CG_DISP0_FROM			= MT_CG_DISP0_SMI_COMMON,
	CG_DISP0_TO			= MT_CG_DISP0_UFOD_RDMA1_L3,

	CG_DISP1_FROM			= MT_CG_DISP1_DISP_PWM_MM,
	CG_DISP1_TO			= MT_CG_DISP1_DISP_DSC_MEM,

	CG_IMAGE_FROM			= MT_CG_IMAGE_LARB2_SMI,
	CG_IMAGE_TO			= MT_CG_IMAGE_CAM_SV,

	CG_MFG_FROM			= MT_CG_G3D_FF,
	CG_MFG_TO			= MT_CG_G3D_MX,

	CG_AUDIO_FROM			= MT_CG_AUDIO_AFE,
	CG_AUDIO_TO			= MT_CG_AUDIO_IDLE_EN_INT,

	CG_VDEC0_FROM			= MT_CG_VDEC0_VDEC,
	CG_VDEC0_TO			= MT_CG_VDEC0_VDEC,

	CG_VDEC1_FROM			= MT_CG_VDEC1_LARB,
	CG_VDEC1_TO			= MT_CG_VDEC1_LARB,

	CG_VENC_FROM			= MT_CG_VENC_CKE0,
	CG_VENC_TO			= MT_CG_VENC_CKE3,
};


#ifdef _MT_IDLE_C

/* TODO: remove it */

extern unsigned int g_SPM_MCDI_Abnormal_WakeUp;

#if defined(EN_PTP_OD) && EN_PTP_OD
extern u32 ptp_data[3];
#endif

extern struct kobject *power_kobj;

#endif /* _MT_IDLE_C */

#endif
